name: Build Frontend

on:
  push:
    branches:
      - main
    tags: ["v*.*.*"]
  workflow_dispatch:

env:
  # kosli commands picks up org, flow, trail and api-token from these environment variables
  KOSLI_ORG: "${{ vars.KOSLI_ORG }}"
  KOSLI_API_TOKEN: "${{ secrets.KOSLI_PUBLIC_API_TOKEN }}"
  KOSLI_CLI_VERSION: "${{ vars.KOSLI_CLI_VERSION }}"
  # KOSLI_DRY_RUN: true

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      kosli-flow: ${{ steps.begin-trail.outputs.kosli-flow }}
      kosli-trail: ${{ steps.begin-trail.outputs.kosli-trail }}
    steps:
      - uses: actions/checkout@v4
      - name: Begin trail
        id: begin-trail
        uses: kosli-dev/jira-multi-repo-release/.github/actions/kosli-begin-trail-commit-or-release@main
        with:
          kosli-release-flow: "jira-multi-repo-front-release"
          kosli-release-template: "kosli-flow-templates/release-template.yml"
          kosli-commit-flow: "jira-multi-repo-front-app"
          kosli-commit-template: "kosli-flow-templates/app-template.yml"


  build:
    name: Build frontend
    needs: [ setup ]
    runs-on: ubuntu-latest
    outputs:
      fingerprint: ${{ steps.calculate_fingerprint.outputs.fingerprint }}
    steps:
      - uses: actions/checkout@v4

      - name: Build frontend
        run: echo "Here we could do some proper build"

      - name: Extract short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - name: Set artifact name
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            # Extract version from tag (remove 'refs/tags/v' prefix)
            VERSION="${{ github.ref }}"
            VERSION="${VERSION#refs/tags/v}"
            echo "ARTIFACT_NAME=frontend:${VERSION}" >> $GITHUB_ENV
          else
            echo "ARTIFACT_NAME=frontend:${{ env.SHORT_SHA }}" >> $GITHUB_ENV
          fi
          echo "Artifact name will be: $ARTIFACT_NAME"

      - name: Attest artifact
        id: calculate_fingerprint
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}
        uses: kosli-dev/jira-multi-repo-release/.github/actions/kosli-attest-dir-artifact@main
        env:
          KOSLI_FLOW: ${{ needs.setup.outputs.kosli-flow }}
          KOSLI_TRAIL: ${{ needs.setup.outputs.kosli-trail }}
        with:
          kosli-artifact-template-name: frontend
          artifact-name: ${{ env.ARTIFACT_NAME }}
          artifact-dir: app/frontend

  deploy-dev:
    name: Deploy frontend development
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}
    needs: [build]
    environment: Development
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to development
        run: echo "Here we could do a proper deploy to Development environment"

  attest-jira-list:
    name: Attest list of Jira issues since previous release
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous release tag
        id: get-previous
        uses: kosli-dev/jira-multi-repo-release/.github/actions/get-previous-release-tag@main
        with:
          current-tag: ${{ github.ref_name }}

      - name: Attest Jira issues list
        if: ${{ steps.get-previous.outputs.has-previous == 'true' }}
        uses: kosli-dev/jira-multi-repo-release/.github/actions/kosli-attest-jira-issues-list@main
        env:
          KOSLI_FLOW: ${{ needs.setup.outputs.kosli-flow }}
          KOSLI_TRAIL: ${{ needs.setup.outputs.kosli-trail }}
        with:
          kosli-source-flow: "jira-multi-repo-front-source"
          old-commit: ${{ steps.get-previous.outputs.previous-tag }}
          new-commit: ${{ github.ref_name }}
